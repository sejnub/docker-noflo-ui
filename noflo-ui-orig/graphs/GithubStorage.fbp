INPORT=Dispatch.IN:IN
INPORT=GetToken.IN:USER
OUTPORT=MergeContext.OUT:CONTEXT
OUTPORT=Sync.CHANGED:OUT

# Read user's GitHub token
'github-token' -> KEY GetToken(objects/GetObjectKey)
GetToken OUT -> STRING HoldToken(strings/SendString)

# Route opening requests
'open,sync,fetch' -> ROUTES Dispatch(routers/GroupRouter)
Dispatch ROUTE -> START Loading(ui/CreateLoadingContext)
Dispatch MISSED -> IN ShowErrors(core/Output)
Loading OUT -> IN MergeContext(core/Merge)

# Load Gist examples
'graph' -> KEY GistId(objects/GetObjectKey)
Dispatch OUT[0] -> IN GistId
GistId OUT -> IN HoldToken OUT -> TOKEN LoadExample
GistId OUT -> GIST LoadExample(ui/LoadExample)
GistId OBJECT -> CONTEXT ExampleToCtx
LoadExample GRAPH -> GRAPH ExampleToCtx(ui/PopulateExampleData) OUT -> IN MergeContext
ExampleToCtx ERROR -> ERROR ErrorToCtx(ui/ErrorToContext)
LoadExample ERROR -> ERROR ErrorToCtx OUT -> IN MergeContext

# GitHub synchronization
Dispatch OUT[1] -> IN Sync(ui/GithubSynchronization)
GetToken OUT -> TOKEN Sync
Sync CONTEXT -> IN MergeContext
Sync ERROR -> ERROR ErrorToCtx

# GitHub projects list
Dispatch OUT[2] -> TOKEN GetRemoteProjects(ui/GetRemoteProjects)
GetRemoteProjects PROJECTS -> IN MergeContext
GetRemoteProjects ERROR -> ERROR ErrorToCtx
