INPORT=Dispatch.IN:IN
OUTPORT=MergeContext.OUT:CONTEXT

'edges,nodes,search_library$,search_graph,search_library_result,graph' -> ROUTES Dispatch(routers/GroupRouter)
Dispatch MISSED -> IN ShowErrors(core/Output)

# Selected edges
Dispatch OUT[0] -> IN SplitEdges(core/Split) OUT -> START CreateEdgeCtx(objects/CreateObject)
CreateEdgeCtx OUT -> CONTEXT SetEdges(ui/SetToContext)
'edges' -> KEY SetEdges
SplitEdges OUT -> VALUE SetEdges CONTEXT -> IN MergeContext(core/Merge)
# TODO: Send to runtime

# Selected nodes
Dispatch OUT[1] -> IN SplitNodes(core/Split) OUT -> START CreateNodeCtx(objects/CreateObject)
CreateNodeCtx OUT -> CONTEXT SetNodes(ui/SetToContext)
'nodes' -> KEY SetNodes
SplitNodes OUT -> VALUE SetNodes CONTEXT -> IN MergeContext

# Search passes through directly for now
Dispatch OUT[2] -> IN MergeContext

# Search results pass through directly for now
Dispatch OUT[4] -> IN MergeContext

# Search nodes in the graph
Dispatch OUT[5] -> IN GetGraph(objects/GetObjectKey)
'graph' -> KEY GetGraph
GetGraph OUT -> GRAPH FindNodesInGraph(ui/FindNodesInGraph)
Dispatch OUT[3] -> IN GetSearchTerm(objects/GetObjectKey)
'search' -> KEY GetSearchTerm
GetSearchTerm OUT -> SEARCH FindNodesInGraph
FindNodesInGraph NODES -> NODES NodesToContext(ui/SearchGraphNodeToContext)
NodesToContext CONTEXT -> IN MergeContext
